{"version":3,"sources":["Components/GeneralInfo/GeneralInfo.styles.js","Components/GeneralInfo/GeneralInfo.jsx","common/const.js","Components/InfoDialog/InfoDialog.jsx","Components/SettingsDialog/SettingsDialog.styles.js","Components/SettingsDialog/SettingsDialog.jsx","Components/DayData/DayData.styles.js","Components/DayData/DayData.jsx","Components/MainPanel/MainPanel.styles.js","Components/MainPanel/MainPanel.jsx","common/requests.js","providers/Theme.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","middleDiv","margin","isBrowser","color","display","justifyContent","leftDiv","flexDirection","paddingBottom","minWidth","degreesDiv","fontSize","marginTop","position","textAlign","degreeSymbol","right","bottom","weatherText","textTransform","fontWeight","tableStyle","width","marginLeft","tdLeft","td","padding","cityData","GeneralInfo","weatherData","settings","styles","className","tempUnit","parseInt","current","temp_c","temp_f","location","name","country","localtime","colSpan","condition","text","feelslike_c","feelslike_f","rangeUnit","wind_kph","wind_mph","pressureUnit","pressure_in","pressure_mb","vis_km","vis_miles","humidity","forecast","forecastday","day","daily_chance_of_rain","astro","sunrise","sunset","API_URL_WEATHER","WEATHER_KEY","dialogPrototype","show","closeFunc","Transition","forwardRef","props","ref","Slide","direction","InfoDialog","Dialog","open","fullWidth","TransitionComponent","keepMounted","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","variant","onClick","mainHolder","gridTemplateColumns","alignItems","buttons","SettingsDialog","data","setData","saveFunc","useState","values","setValues","changeValue","field","newValue","newData","sx","m","TextField","size","value","home","onChange","e","target","FormControl","Select","MenuItem","startIcon","test","backgroundColor","borderRadius","border","palette","primary","main","height","errorDiv","singleDay","dayName","top","tempsDiv","imageStyle","DayData","Date","date","toLocaleDateString","weekday","temps","mintemp_c","maxtemp_c","mintemp_f","maxtemp_f","src","icon","alt","CircularProgress","mainDiv","toolbarDiv","buttonsBar","searchField","borderColor","favoritesBar","minHeight","selectStyle","progressDiv","weekDays","menuIcon","mobileMenu","sets","JSON","parse","window","localStorage","getItem","favorites","info","MainPanel","setWeatherData","town","setTown","showFav","setShowFav","favTown","setFavTown","searchPlace","setSearchPlace","dialogProps","setDialogProps","setSettings","settingsDialog","setSettingsDialog","showMenu","setShowMenu","useEffect","address","fetch","then","response","json","catch","console","log","message","getWeatherData","result","error","saveSettings","settingsData","setItem","stringify","sendRequest","key","OutlinedInput","type","placeholder","onKeyPress","endAdornment","InputAdornment","IconButton","edge","style","cityName","checkAction","filter","x","toLowerCase","length","Tooltip","title","arrow","city","newList","removeFavorite","newRecord","addFavorite","renderFavButton","chosenTown","map","fav","index","slice","concat","Array","fill","createTheme","secondary","blueGrey","warning","teal","Theme","children","ThemeProvider","CssBaseline","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a836cc72.chunk.js","sourcesContent":["import { makeStyles } from '@mui/styles';\nimport { isBrowser } from 'react-device-detect';\n\n\nexport const useStyles = makeStyles(theme => ({\n  middleDiv: {\n    margin: isBrowser ? '20px 15px 20px 15px' : '35px 15px 20px 15px',\n    color: 'white',\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n\n  leftDiv: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    paddingBottom: 8,\n    minWidth: isBrowser ? '150px' : 100,\n  },\n\n  degreesDiv: {\n    fontSize: isBrowser ? '100px' : '65px',\n    marginTop: isBrowser ? -24 : -18,\n    position: 'relative',\n    textAlign: 'right',\n    \n  },\n\n  degreeSymbol: {\n    position: 'absolute',\n    fontSize: isBrowser ? '35px' : '23px',\n    right: 5,\n    bottom: isBrowser ? 25 : 17,\n  },\n\n  weatherText: {\n    fontSize: isBrowser ? 22 : 18,\n    paddingBottom: 14,\n    textTransform: 'uppercase',\n    fontWeight: 'bold',\n  },\n\n  tableStyle:{\n    width: '100%',\n    marginLeft: isBrowser ? 40 : 20,\n  },\n\n  tdLeft: {\n    fontSize: isBrowser ? null : 12,\n  },\n\n  td: {\n    padding: isBrowser ? '8px 8px 8px 8px' : '5px 5px 5px 5px',\n    textAlign: 'left',\n    fontSize: isBrowser ? null : 12,\n  },\n\n  cityData: {\n    fontSize: isBrowser ? null : 12,\n  }\n}));","import React from \"react\";\nimport { useStyles } from \"./GeneralInfo.styles\";\n\nconst GeneralInfo = ({weatherData, settings}) => {\n  const styles = useStyles();\n  \n  return (\n    <div className={styles.middleDiv}>\n        <div className={styles.leftDiv}>\n          <div className={styles.degreesDiv}>\n            {\n              settings.tempUnit === 'C'\n                ? parseInt(weatherData.current.temp_c)\n                : parseInt(weatherData.current.temp_f)\n            }&deg;\n            <span className={styles.degreeSymbol}>{settings.tempUnit}</span>\n          </div>\n          <div className={styles.cityData}>\n            {weatherData.location.name}, {weatherData.location.country}\n          </div>\n          <div className={styles.cityData}>\n            {weatherData.location.localtime}\n          </div>\n        </div>\n        <table className={styles.tableStyle}>\n          <tbody>\n            <tr>\n              <td className={styles.weatherText} colSpan='2'>{weatherData.current.condition.text}</td>\n            </tr>\n            <tr>\n              <td className={styles.tdLeft}>Feels Like: &nbsp;\n                { \n                  settings.tempUnit === 'C'\n                    ? weatherData.current.feelslike_c\n                    : weatherData.current.feelslike_f\n                } &deg;\n              </td>\n              <td className={styles.td}>\n                Wind: \n                {\n                  settings.rangeUnit === 'km'\n                  ? ` ${weatherData.current.wind_kph} kph`\n                  : ` ${weatherData.current.wind_mph} mph`\n                }\n              </td>\n            </tr>\n            <tr>\n              <td className={styles.tdLeft}>Pressure: \n                {\n                  settings.pressureUnit === 'in'\n                    ? ` ${weatherData.current.pressure_in} in`\n                    : ` ${weatherData.current.pressure_mb} mb`\n                }\n              </td>\n              <td className={styles.td}>Visibility:\n                {\n                  settings.rangeUnit === 'km'\n                  ? ` ${weatherData.current.vis_km} km`\n                  : ` ${weatherData.current.vis_miles} mi`\n                }\n              </td>\n            </tr>\n            <tr>\n              <td className={styles.tdLeft}>Humidity: {weatherData.current.humidity} %</td>\n              <td className={styles.td}>Rain Chance: {weatherData.forecast.forecastday[0].day.daily_chance_of_rain} %</td>\n            </tr>\n            <tr>\n              <td className={styles.tdLeft}>Sunrise: {weatherData.forecast.forecastday[0].astro.sunrise}</td>\n              <td className={styles.td}>Sunset: {weatherData.forecast.forecastday[0].astro.sunset}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n  )\n}\n\nexport default GeneralInfo;","export const API_URL_WEATHER = 'https://api.weatherapi.com/v1/forecast.json';\n\nexport const WEATHER_KEY = '0efcd722ee444b57849103704210710';\n\nexport const WEATHER_LANG = 'en';\n\nexport const dialogPrototype = {\n  show: false,\n  text: 'none',\n  closeFunc: () => null,\n}\n\nexport const defaultSettings = {\n  settings: {\n    home: 'Pleven',\n    tempUnit: 'C',\n    rangeUnit: 'km',\n    pressureUnit: 'in'\n  },\n\n  favorites: [\n    { name: 'sofia', info: 'Sofia, Bulgaria' },\n    { name: 'chelyabinsk', info: 'Chelyabinsk, Russia' },\n    { name: 'dakar', info: 'Dakar, Senegal' },\n  ]\n}","import React, {forwardRef} from \"react\";\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Slide from '@mui/material/Slide';\nimport { dialogPrototype } from '../../common/const';\n\n\nconst Transition = forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst InfoDialog = ({text, closeFunc}) => {\n  return (\n    <Dialog\n      open={true}\n      fullWidth\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={() => closeFunc(dialogPrototype)}\n    >\n      <DialogTitle>Error</DialogTitle>\n      <DialogContent>\n        <DialogContentText>{text}</DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button variant='contained' color='secondary' onClick={() => closeFunc(dialogPrototype)}>Close</Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default InfoDialog;","import { makeStyles } from '@mui/styles';\n// import { isBrowser } from 'react-device-detect';\n\n\nexport const useStyles = makeStyles(theme => ({\n  mainHolder: {\n    display: 'grid',\n    gridTemplateColumns: 'auto auto auto',\n    alignItems: 'center',\n    margin: '0px 12px 0px 12px'\n  },\n  \n  buttons: {\n    margin: '10px 12px 10px 12px'\n  },\n}));\n","import React, {forwardRef, useState} from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport TextField from '@mui/material/TextField';\nimport Slide from '@mui/material/Slide';\nimport FormControl from '@mui/material/FormControl';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport HomeIcon from '@mui/icons-material/Home';\nimport SpeedIcon from '@mui/icons-material/Speed';\nimport CompressIcon from '@mui/icons-material/Compress';\nimport ThermostatIcon from '@mui/icons-material/Thermostat';\nimport SaveIcon from '@mui/icons-material/Save';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { useStyles } from './SettingsDialog.styles';\nimport PropTypes from 'prop-types';\n\n\nconst Transition = forwardRef(function Transition(props, ref) {\n  return <Slide direction='up' ref={ref} {...props} />;\n});\n\n\nconst SettingsDialog = ({data, setData, saveFunc, closeFunc}) => {\n  const styles = useStyles();\n\n  const [values, setValues] = useState(data);\n\n  const changeValue = (field, newValue) => {\n    const newData = {...values.settings, [field]: newValue}\n    setValues({...values, settings: newData});\n  }\n\n  const saveData = () => {\n    setData(values)\n    saveFunc(values);\n    closeFunc(false);\n  }\n\n  return (\n    <Dialog\n      open={true}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={() => closeFunc(false)}\n    >\n      <DialogTitle>Settings</DialogTitle>\n        <div className={styles.mainHolder}>\n          <HomeIcon sx={{ m: 1}} color='secondary'/>\n          Home\n          <TextField\n            sx={{ m: 1, minWidth: 50, }}\n            variant='outlined'\n            size='small'\n            value={values.settings.home}\n            onChange={(e) => changeValue('home', e.target.value)}\n          />\n          <ThermostatIcon sx={{ m: 1}} color='secondary'/>\n          Temperature\n          <FormControl sx={{ m: 1, minWidth: 50 }}>\n            <Select\n              size='small'\n              value={values.settings.tempUnit}\n              onChange={(e) => changeValue('tempUnit', e.target.value)}\n            >\n              <MenuItem value={'C'}>Celsius (C&deg;)</MenuItem>\n              <MenuItem value={'F'}>Fahrenheit (F&deg;)</MenuItem>\n            </Select>\n          </FormControl>\n          <SpeedIcon sx={{ m: 1}} color='secondary'/>\n          Speed/Range\n          <FormControl sx={{ m: 1, minWidth: 50 }}>\n            <Select\n              size='small'\n              value={values.settings.rangeUnit}\n              onChange={(e) => changeValue('rangeUnit', e.target.value)}\n            >\n              <MenuItem value={'km'}>Kilometers (km)</MenuItem>\n              <MenuItem value={'mi'}>Miles (mi)</MenuItem>\n            </Select>\n          </FormControl>\n          <CompressIcon sx={{ m: 1}} color='secondary'/>\n          Pressure\n          <FormControl sx={{ m: 1, minWidth: 50 }}>\n            <Select\n              size='small'\n              value={values.settings.pressureUnit}\n              onChange={(e) => changeValue('pressureUnit', e.target.value)}\n            >\n              <MenuItem value={'in'}>Inches of mercury (in)</MenuItem>\n              <MenuItem value={'mb'}>Millibars (mb)</MenuItem>\n            </Select>\n          </FormControl>\n        </div>\n      <DialogActions className={styles.buttons}>\n        <Button startIcon={<SaveIcon />} variant='contained' color='warning' className={styles.test} onClick={saveData}>Save</Button>\n        <Button startIcon={<CloseIcon />} variant='contained' color='secondary' onClick={() => closeFunc(false)}>Close</Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nSettingsDialog.propTypes = {\n  data: PropTypes.object.isRequired,\n  setData: PropTypes.func.isRequired,\n  saveFunc: PropTypes.func.isRequired,\n  closeFunc: PropTypes.func.isRequired,\n}\n\nexport default SettingsDialog;","import { makeStyles } from '@mui/styles';\nimport { isBrowser } from 'react-device-detect';\n\n\nexport const useStyles = makeStyles(theme => ({\n  mainHolder: {\n    margin: 5,\n    padding: 5,\n    backgroundColor: 'rgb(255 255 255 / 20%)',\n    borderRadius: 4,\n    border: '1px solid rgb(255 255 255 / 50%)',\n    fontSize: '0.75rem',\n    color: theme.palette.primary.main,\n    height: isBrowser ? 90 : null,\n  },\n\n  errorDiv: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n  },\n\n  singleDay: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'start',\n    height: '100%',\n    justifyContent: isBrowser ? 'space-between' : 'flex-start',\n  },\n\n  dayName: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n  },\n\n  weatherText: {\n    fontSize: '0.65rem',\n  },\n\n  middleDiv: {\n    display: 'flex',\n    alignItems: 'end',\n    width: '100%',\n    justifyContent: 'space-between',\n  },\n\n  tempsDiv: {\n    fontSize: isBrowser ? '0.87rem' : '1rem',\n    paddingBottom: isBrowser ? 3 : 0,\n    margin: isBrowser ? null : '5px 0px 5px 0px',\n    textAlign: isBrowser ? 'right' : 'center',\n    width: '100%'\n  },\n\n  imageStyle: {\n    marginTop: isBrowser ? -5 : 0,\n    width: isBrowser ? 55 : 65,\n    height: isBrowser ? 55 : 65,\n  },\n}));\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { useStyles } from \"./DayData.styles\";\nimport { isBrowser } from 'react-device-detect';\n\n\nconst DayData = ({data, settings}) => {\n  const styles = useStyles();\n\n  const singleDay = () => {\n    const day = new Date (data.date).toLocaleDateString('en-US', {weekday: \"short\", day: \"2-digit\"});\n    let temps = `${parseInt(data.day.mintemp_c)}° ${parseInt(data.day.maxtemp_c)}°`\n\n    if (settings.tempUnit === 'F') {\n      temps = `${parseInt(data.day.mintemp_f)}° ${parseInt(data.day.maxtemp_f)}°`\n    }\n    \n    return (\n      isBrowser\n        ? <div className={styles.singleDay}>\n            <div className={styles.dayName}>{day}</div>\n            <div className={styles.middleDiv}>\n              <img className={styles.imageStyle} src={data.day.condition.icon} alt='weather' />\n              <div className={styles.tempsDiv}>\n                {temps}\n              </div>\n            </div>\n            <div className={styles.weatherText}>{data.day.condition.text}</div>\n          </div>\n        : <div className={styles.singleDay}>\n            {day}\n            <img className={styles.imageStyle} src={data.day.condition.icon} alt='weather' />\n            <div className={styles.tempsDiv}>{temps}</div>\n            <div className={styles.weatherText}>{data.day.condition.text}</div>\n          </div>\n    )\n  }\n  \n  return (\n    <div className={styles.mainHolder}>\n      {\n        data\n        ? singleDay()\n        : <div className={styles.errorDiv}><CircularProgress /></div>\n      }\n    </div>\n  )\n}\n\nDayData.propTypes = {\n  data: PropTypes.object,\n  settings: PropTypes.object.isRequired,\n}\n\nexport default DayData;","import { makeStyles } from '@mui/styles';\nimport { isBrowser } from 'react-device-detect';\n\n\nexport const useStyles = makeStyles(theme => ({\n  mainDiv: {\n    margin: isBrowser ? 40 : 0,\n    width: isBrowser ? 550 : '100%',\n    height: isBrowser ? 475 : '100%',\n    border: '1px solid black',\n    backgroundColor: '#2b3336'\n  },\n\n  toolbarDiv: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    margin: 10,\n  },\n\n  buttonsBar: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n\n  searchField: {\n    backgroundColor: 'rgb(255 255 255 / 20%)',\n    '& .MuiInputBase-input': {\n      color: 'white',\n    },\n    '& .MuiOutlinedInput-notchedOutline': {\n      borderColor: 'rgb(255 255 255 / 50%)',\n    },\n    width: isBrowser ? 300 : 280,\n  },\n\n  favoritesBar: {\n    margin: '0px 10px 0px 10px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    minHeight: 40,\n  },\n\n  selectStyle: {\n    backgroundColor: 'rgb(255 255 255 / 20%)',\n    width: isBrowser ? 300 : 280,\n\n    '& .MuiSvgIcon-root': {\n      color: 'white',\n    },\n    '& .MuiInputBase-input':{\n      color: 'white',\n    },\n\n    '& .MuiOutlinedInput-notchedOutline': {\n      borderColor: 'rgb(255 255 255 / 50%)',\n    },\n  },\n\n  progressDiv: {\n    textAlign: 'center',\n    margin: '40px 20px 20px 20px',\n  },\n\n  weekDays: {\n    margin: 10,\n    display: 'grid',\n    gridTemplateColumns: '25% 25% 25% 25%',\n  },\n\n  menuIcon: {\n    backgroundColor: 'rgb(255 255 255 / 20%)',\n  },\n\n  mobileMenu: {\n    position: 'absolute',\n    top: 48,\n    right: 11,\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: 'rgb(255 255 255 / 20%)',\n  }\n}));\n","import React, { useEffect, useState } from 'react';\nimport FormControl from '@mui/material/FormControl';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport SearchIcon from '@mui/icons-material/Search';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport IconButton from '@mui/material/IconButton';\nimport StarIcon from '@mui/icons-material/Star';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport Tooltip from '@mui/material/Tooltip';\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport HomeIcon from '@mui/icons-material/Home';\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\nimport GeneralInfo from '../GeneralInfo/GeneralInfo';\nimport InfoDialog from '../InfoDialog/InfoDialog';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport SettingsDialog from '../SettingsDialog/SettingsDialog';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport DayData from '../DayData/DayData';\nimport { useStyles } from './MainPanel.styles';\nimport { getMyIpLocation, getWeatherData } from '../../common/requests';\nimport { defaultSettings, dialogPrototype } from '../../common/const';\nimport { isBrowser } from 'react-device-detect';\n\nconst sets = JSON.parse(window.localStorage.getItem('weatherSettings')) || defaultSettings;\n\nconst MainPanel = () => {\n  const styles = useStyles();\n  const [weatherData, setWeatherData] = useState(null);\n  const [town, setTown] = useState(sets.settings.home);\n  const [showFav, setShowFav] = useState(false);\n  const [favTown, setFavTown] = useState('');\n  const [searchPlace, setSearchPlace] = useState('');\n  const [dialogProps, setDialogProps] = useState(dialogPrototype);\n  const [settings, setSettings] = useState(sets);\n  const [settingsDialog, setSettingsDialog] = useState(false);\n  const [showMenu, setShowMenu] = useState(false);\n\n  useEffect(() => {\n    getWeatherData(town).then(result => {\n      if (result.error) {\n        setDialogProps({show: true, text: result.error.message, closeFunc: setDialogProps})\n        return;\n      }\n      setWeatherData(result)\n    }).catch(e => {\n      setDialogProps({show: true, text: e.message, closeFunc: setDialogProps})\n    });\n  }, [town]);\n\n  const saveSettings = (settingsData) => window.localStorage.setItem('weatherSettings', JSON.stringify(settingsData));\n\n  const getMyLocation = () => {\n    getMyIpLocation()\n    .then(result => setTown(result.city))\n    .catch(e => setDialogProps({show: true, text: e.message, closeFunc: setDialogProps}))\n  }\n\n  const sendRequest = (key) => setTown(searchPlace);\n  \n  const updateFav = (chosenTown) => {\n    setTown(chosenTown);\n    setFavTown(chosenTown);\n  }\n\n  const addFavorite = (city, country) => {\n    const newRecord = [...settings.favorites, { name: city, info: `${city}, ${country}`}];\n    saveSettings({...settings, favorites: newRecord});\n    setSettings({...settings, favorites: newRecord});\n  }\n\n  const removeFavorite = (city) => {\n    const newList = settings.favorites.filter(x => x.name.toLowerCase() !== city.toLowerCase());\n\n    if (favTown === city) {\n      setFavTown(newList[0].name);\n    }\n    saveSettings({...settings, favorites: newList});\n    setSettings({...settings, favorites: newList});\n  }\n\n  const renderFavButton = (cityName, country) => {\n    const checkAction = settings.favorites.filter(x => x.name.toLowerCase() === cityName.toLowerCase()).length;\n\n    return (\n      <Tooltip title={checkAction ? 'Remove from Favorites' : 'Add to Favorites'} arrow>\n        <IconButton onClick={checkAction ? () => removeFavorite(cityName) : () => addFavorite(cityName, country)} size={isBrowser ? 'medium' : 'small'}>\n          { checkAction ? <FavoriteIcon color='primary'/> : <FavoriteBorderIcon color='primary'/> }\n        </IconButton>\n      </Tooltip>\n    )\n  }\n\n  return (\n    <div className={styles.mainDiv} >\n      <div className={styles.toolbarDiv}>\n        <FormControl variant='outlined'>\n          <OutlinedInput\n            type='text'\n            placeholder='Search'\n            size='small'\n            className={styles.searchField}\n            value={searchPlace}\n            onChange={(e) => setSearchPlace(e.target.value)}\n            onKeyPress={(e) => e.key === 'Enter' ? sendRequest(e.key) : null}\n            endAdornment={\n              <InputAdornment position='end'>\n                <IconButton edge='end' onClick={sendRequest}>\n                  <SearchIcon color='primary'/>\n                </IconButton>\n              </InputAdornment>\n            }\n          />\n        </FormControl>\n        {\n          isBrowser\n          ? null\n          : <div className={styles.menuIcon}>\n              <IconButton size='small' onClick={() => setShowMenu(!showMenu)}>\n                <MenuIcon color='primary'/>\n              </IconButton>\n            </div>\n        }\n        \n\n        <div className={isBrowser ? styles.buttonsBar : styles.mobileMenu} style={{display: isBrowser ? null : showMenu ? 'flex' : 'none'}}>\n          {\n            weatherData\n            ? renderFavButton(weatherData.location.name, weatherData.location.country)\n            : null\n          }\n          <Tooltip title={showFav ? 'Hide Favorites' : 'Show Favorites'} arrow>\n            <IconButton onClick={() => setShowFav(!showFav)} size={isBrowser ? 'medium' : 'small'}>\n              <StarIcon color='primary'/>\n            </IconButton>\n          </Tooltip>\n\n          <Tooltip title='My home place' arrow>\n            <IconButton onClick={() => setTown(settings.settings.home)} size={isBrowser ? 'medium' : 'small'}>\n              <HomeIcon color='primary'/>\n            </IconButton>\n          </Tooltip>\n\n          <Tooltip title='Current place' arrow>\n            <IconButton onClick={getMyLocation} size={isBrowser ? 'medium' : 'small'}>\n              <LocationOnIcon color='primary'/>\n            </IconButton>\n          </Tooltip>\n\n          <Tooltip title='Settings' arrow>\n            <IconButton onClick={() => setSettingsDialog(true)} size={isBrowser ? 'medium' : 'small'}>\n              <SettingsIcon color='primary'/>\n            </IconButton>\n          </Tooltip>\n        </div>\n      </div>\n\n      <div className={styles.favoritesBar}>\n        {\n          showFav\n          ? <FormControl className={styles.test}>\n              <Select\n                size='small'\n                className={styles.selectStyle}\n                value={favTown}\n                onChange={(e) => updateFav(e.target.value)}\n              >\n                {\n                  settings\n                  ? settings.favorites.map((fav, index) => <MenuItem key={index} value={fav.name}>{fav.info}</MenuItem>)\n                  : null\n                }\n              </Select>\n            </FormControl>\n          : null\n        }\n      </div>\n      {\n        weatherData\n        ? <GeneralInfo weatherData={weatherData} settings={settings.settings}/>\n        : <div className={styles.progressDiv}><CircularProgress size='60px'/></div>\n      }\n\n      {\n        dialogProps.show\n        ? <InfoDialog text={dialogProps.text} closeFunc={setDialogProps}/>\n        : null\n      }\n      {\n        settingsDialog\n        ? <SettingsDialog data={settings} setData={setSettings} saveFunc={saveSettings} closeFunc={setSettingsDialog} />\n        : null\n      }\n      <div className={styles.weekDays}>\n        {\n          weatherData\n          ? weatherData.forecast.forecastday\n            .slice(1).concat(weatherData.forecast.forecastday\n            .slice(1)).map((day, index) => <DayData key={index} data={day} settings={settings.settings} />)\n          : new Array(4).fill(null).map((day, index) => <DayData key={index} data={day} settings={settings.settings} />)\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default MainPanel;","import { API_URL_WEATHER, WEATHER_KEY, WEATHER_LANG } from './const.js';\n\nexport const getWeatherData = (town = 'Sofia') => {\n  const address = `${API_URL_WEATHER}?key=${WEATHER_KEY}&q=${town}&days=5&aqi=no&alerts=no&lang=${WEATHER_LANG}&hour=24`;\n  return fetch(address).then(response => response.json()).catch(e => console.log(e.message));\n}\n\nexport const getMyIpLocation = () => {\n  return fetch('https://api.db-ip.com/v2/free/self').then(response => response.json());\n}","import { unstable_createMuiStrictModeTheme as createTheme, ThemeProvider } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { blueGrey, teal } from '@mui/material/colors';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#FFFFFF',\n    },\n    secondary: blueGrey,\n    warning: teal,\n  },\n});\n\nconst Theme = ({ children }) => {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      {children}\n    </ThemeProvider>\n  );\n};\n\nexport default Theme;","import './App.css';\nimport MainPanel from './Components/MainPanel/MainPanel';\nimport Theme from './providers/Theme';\n\n\nfunction App() {\n  return (\n    <Theme>\n      <MainPanel/>\n    </Theme>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}